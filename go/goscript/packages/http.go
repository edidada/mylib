package imports

import (
	"net/http"
	"reflect"

	"git.woa.com/vasd_masc_ba/YitihuaOteam/base/gofun/register"
)

var _ = reflect.Int

func init() {
	register.AddPackage("net/http", "http",
		register.NewFunction("CanonicalHeaderKey", http.CanonicalHeaderKey, ""),
		register.NewType("Client", reflect.TypeOf(func(http.Client) {}).In(0), ""),
		register.NewType("CloseNotifier", reflect.TypeOf(func(http.CloseNotifier) {}).In(0), ""),
		register.NewType("ConnState", reflect.TypeOf(func(http.ConnState) {}).In(0), ""),
		register.NewType("Cookie", reflect.TypeOf(func(http.Cookie) {}).In(0), ""),
		register.NewType("CookieJar", reflect.TypeOf(func(http.CookieJar) {}).In(0), ""),
		register.NewVar("DefaultClient", &http.DefaultClient, reflect.TypeOf(http.DefaultClient), ""),
		register.NewConst("DefaultMaxHeaderBytes", http.DefaultMaxHeaderBytes, ""),
		register.NewConst("DefaultMaxIdleConnsPerHost", http.DefaultMaxIdleConnsPerHost, ""),
		register.NewVar("DefaultServeMux", &http.DefaultServeMux, reflect.TypeOf(http.DefaultServeMux), ""),
		register.NewVar("DefaultTransport", &http.DefaultTransport, reflect.TypeOf(func(http.RoundTripper) {}).In(0), ""),
		register.NewFunction("DetectContentType", http.DetectContentType, ""),
		register.NewType("Dir", reflect.TypeOf(func(http.Dir) {}).In(0), ""),
		register.NewVar("ErrAbortHandler", &http.ErrAbortHandler, reflect.TypeOf(func(error) {}).In(0), ""),
		register.NewVar("ErrBodyNotAllowed", &http.ErrBodyNotAllowed, reflect.TypeOf(func(error) {}).In(0), ""),
		register.NewVar("ErrBodyReadAfterClose", &http.ErrBodyReadAfterClose, reflect.TypeOf(func(error) {}).In(0), ""),
		register.NewVar("ErrContentLength", &http.ErrContentLength, reflect.TypeOf(func(error) {}).In(0), ""),
		register.NewVar("ErrHandlerTimeout", &http.ErrHandlerTimeout, reflect.TypeOf(func(error) {}).In(0), ""),
		register.NewVar("ErrHeaderTooLong", &http.ErrHeaderTooLong, reflect.TypeOf(http.ErrHeaderTooLong), ""),
		register.NewVar("ErrHijacked", &http.ErrHijacked, reflect.TypeOf(func(error) {}).In(0), ""),
		register.NewVar("ErrLineTooLong", &http.ErrLineTooLong, reflect.TypeOf(func(error) {}).In(0), ""),
		register.NewVar("ErrMissingBoundary", &http.ErrMissingBoundary, reflect.TypeOf(http.ErrMissingBoundary), ""),
		register.NewVar("ErrMissingContentLength", &http.ErrMissingContentLength, reflect.TypeOf(http.ErrMissingContentLength), ""),
		register.NewVar("ErrMissingFile", &http.ErrMissingFile, reflect.TypeOf(func(error) {}).In(0), ""),
		register.NewVar("ErrNoCookie", &http.ErrNoCookie, reflect.TypeOf(func(error) {}).In(0), ""),
		register.NewVar("ErrNoLocation", &http.ErrNoLocation, reflect.TypeOf(func(error) {}).In(0), ""),
		register.NewVar("ErrNotMultipart", &http.ErrNotMultipart, reflect.TypeOf(http.ErrNotMultipart), ""),
		register.NewVar("ErrNotSupported", &http.ErrNotSupported, reflect.TypeOf(http.ErrNotSupported), ""),
		register.NewVar("ErrServerClosed", &http.ErrServerClosed, reflect.TypeOf(func(error) {}).In(0), ""),
		register.NewVar("ErrShortBody", &http.ErrShortBody, reflect.TypeOf(http.ErrShortBody), ""),
		register.NewVar("ErrSkipAltProtocol", &http.ErrSkipAltProtocol, reflect.TypeOf(func(error) {}).In(0), ""),
		register.NewVar("ErrUnexpectedTrailer", &http.ErrUnexpectedTrailer, reflect.TypeOf(http.ErrUnexpectedTrailer), ""),
		register.NewVar("ErrUseLastResponse", &http.ErrUseLastResponse, reflect.TypeOf(func(error) {}).In(0), ""),
		register.NewVar("ErrWriteAfterFlush", &http.ErrWriteAfterFlush, reflect.TypeOf(func(error) {}).In(0), ""),
		register.NewFunction("Error", http.Error, ""),
		register.NewType("File", reflect.TypeOf(func(http.File) {}).In(0), ""),
		register.NewFunction("FileServer", http.FileServer, ""),
		register.NewType("FileSystem", reflect.TypeOf(func(http.FileSystem) {}).In(0), ""),
		register.NewType("Flusher", reflect.TypeOf(func(http.Flusher) {}).In(0), ""),
		register.NewFunction("Get", http.Get, ""),
		register.NewFunction("Handle", http.Handle, ""),
		register.NewFunction("HandleFunc", http.HandleFunc, ""),
		register.NewType("Handler", reflect.TypeOf(func(http.Handler) {}).In(0), ""),
		register.NewType("HandlerFunc", reflect.TypeOf(func(http.HandlerFunc) {}).In(0), ""),
		register.NewFunction("Head", http.Head, ""),
		register.NewType("Header", reflect.TypeOf(func(http.Header) {}).In(0), ""),
		register.NewType("Hijacker", reflect.TypeOf(func(http.Hijacker) {}).In(0), ""),
		register.NewFunction("ListenAndServe", http.ListenAndServe, ""),
		register.NewFunction("ListenAndServeTLS", http.ListenAndServeTLS, ""),
		register.NewVar("LocalAddrContextKey", &http.LocalAddrContextKey, reflect.TypeOf(http.LocalAddrContextKey), ""),
		register.NewFunction("MaxBytesReader", http.MaxBytesReader, ""),
		register.NewConst("MethodConnect", http.MethodConnect, ""),
		register.NewConst("MethodDelete", http.MethodDelete, ""),
		register.NewConst("MethodGet", http.MethodGet, ""),
		register.NewConst("MethodHead", http.MethodHead, ""),
		register.NewConst("MethodOptions", http.MethodOptions, ""),
		register.NewConst("MethodPatch", http.MethodPatch, ""),
		register.NewConst("MethodPost", http.MethodPost, ""),
		register.NewConst("MethodPut", http.MethodPut, ""),
		register.NewConst("MethodTrace", http.MethodTrace, ""),
		register.NewFunction("NewFileTransport", http.NewFileTransport, ""),
		register.NewFunction("NewRequest", http.NewRequest, ""),
		register.NewFunction("NewRequestWithContext", http.NewRequestWithContext, ""),
		register.NewFunction("NewServeMux", http.NewServeMux, ""),
		register.NewVar("NoBody", &http.NoBody, reflect.TypeOf(http.NoBody), ""),
		register.NewFunction("NotFound", http.NotFound, ""),
		register.NewFunction("NotFoundHandler", http.NotFoundHandler, ""),
		register.NewFunction("ParseHTTPVersion", http.ParseHTTPVersion, ""),
		register.NewFunction("ParseTime", http.ParseTime, ""),
		register.NewFunction("Post", http.Post, ""),
		register.NewFunction("PostForm", http.PostForm, ""),
		register.NewType("ProtocolError", reflect.TypeOf(func(http.ProtocolError) {}).In(0), ""),
		register.NewFunction("ProxyFromEnvironment", http.ProxyFromEnvironment, ""),
		register.NewFunction("ProxyURL", http.ProxyURL, ""),
		register.NewType("PushOptions", reflect.TypeOf(func(http.PushOptions) {}).In(0), ""),
		register.NewType("Pusher", reflect.TypeOf(func(http.Pusher) {}).In(0), ""),
		register.NewFunction("ReadRequest", http.ReadRequest, ""),
		register.NewFunction("ReadResponse", http.ReadResponse, ""),
		register.NewFunction("Redirect", http.Redirect, ""),
		register.NewFunction("RedirectHandler", http.RedirectHandler, ""),
		register.NewType("Request", reflect.TypeOf(func(http.Request) {}).In(0), ""),
		register.NewType("Response", reflect.TypeOf(func(http.Response) {}).In(0), ""),
		register.NewType("ResponseWriter", reflect.TypeOf(func(http.ResponseWriter) {}).In(0), ""),
		register.NewType("RoundTripper", reflect.TypeOf(func(http.RoundTripper) {}).In(0), ""),
		register.NewType("SameSite", reflect.TypeOf(func(http.SameSite) {}).In(0), ""),
		register.NewConst("SameSiteDefaultMode", http.SameSiteDefaultMode, ""),
		register.NewConst("SameSiteLaxMode", http.SameSiteLaxMode, ""),
		register.NewConst("SameSiteNoneMode", http.SameSiteNoneMode, ""),
		register.NewConst("SameSiteStrictMode", http.SameSiteStrictMode, ""),
		register.NewFunction("Serve", http.Serve, ""),
		register.NewFunction("ServeContent", http.ServeContent, ""),
		register.NewFunction("ServeFile", http.ServeFile, ""),
		register.NewType("ServeMux", reflect.TypeOf(func(http.ServeMux) {}).In(0), ""),
		register.NewFunction("ServeTLS", http.ServeTLS, ""),
		register.NewType("Server", reflect.TypeOf(func(http.Server) {}).In(0), ""),
		register.NewVar("ServerContextKey", &http.ServerContextKey, reflect.TypeOf(http.ServerContextKey), ""),
		register.NewFunction("SetCookie", http.SetCookie, ""),
		register.NewConst("StateActive", http.StateActive, ""),
		register.NewConst("StateClosed", http.StateClosed, ""),
		register.NewConst("StateHijacked", http.StateHijacked, ""),
		register.NewConst("StateIdle", http.StateIdle, ""),
		register.NewConst("StateNew", http.StateNew, ""),
		register.NewConst("StatusAccepted", http.StatusAccepted, ""),
		register.NewConst("StatusAlreadyReported", http.StatusAlreadyReported, ""),
		register.NewConst("StatusBadGateway", http.StatusBadGateway, ""),
		register.NewConst("StatusBadRequest", http.StatusBadRequest, ""),
		register.NewConst("StatusConflict", http.StatusConflict, ""),
		register.NewConst("StatusContinue", http.StatusContinue, ""),
		register.NewConst("StatusCreated", http.StatusCreated, ""),
		register.NewConst("StatusEarlyHints", http.StatusEarlyHints, ""),
		register.NewConst("StatusExpectationFailed", http.StatusExpectationFailed, ""),
		register.NewConst("StatusFailedDependency", http.StatusFailedDependency, ""),
		register.NewConst("StatusForbidden", http.StatusForbidden, ""),
		register.NewConst("StatusFound", http.StatusFound, ""),
		register.NewConst("StatusGatewayTimeout", http.StatusGatewayTimeout, ""),
		register.NewConst("StatusGone", http.StatusGone, ""),
		register.NewConst("StatusHTTPVersionNotSupported", http.StatusHTTPVersionNotSupported, ""),
		register.NewConst("StatusIMUsed", http.StatusIMUsed, ""),
		register.NewConst("StatusInsufficientStorage", http.StatusInsufficientStorage, ""),
		register.NewConst("StatusInternalServerError", http.StatusInternalServerError, ""),
		register.NewConst("StatusLengthRequired", http.StatusLengthRequired, ""),
		register.NewConst("StatusLocked", http.StatusLocked, ""),
		register.NewConst("StatusLoopDetected", http.StatusLoopDetected, ""),
		register.NewConst("StatusMethodNotAllowed", http.StatusMethodNotAllowed, ""),
		register.NewConst("StatusMisdirectedRequest", http.StatusMisdirectedRequest, ""),
		register.NewConst("StatusMovedPermanently", http.StatusMovedPermanently, ""),
		register.NewConst("StatusMultiStatus", http.StatusMultiStatus, ""),
		register.NewConst("StatusMultipleChoices", http.StatusMultipleChoices, ""),
		register.NewConst("StatusNetworkAuthenticationRequired", http.StatusNetworkAuthenticationRequired, ""),
		register.NewConst("StatusNoContent", http.StatusNoContent, ""),
		register.NewConst("StatusNonAuthoritativeInfo", http.StatusNonAuthoritativeInfo, ""),
		register.NewConst("StatusNotAcceptable", http.StatusNotAcceptable, ""),
		register.NewConst("StatusNotExtended", http.StatusNotExtended, ""),
		register.NewConst("StatusNotFound", http.StatusNotFound, ""),
		register.NewConst("StatusNotImplemented", http.StatusNotImplemented, ""),
		register.NewConst("StatusNotModified", http.StatusNotModified, ""),
		register.NewConst("StatusOK", http.StatusOK, ""),
		register.NewConst("StatusPartialContent", http.StatusPartialContent, ""),
		register.NewConst("StatusPaymentRequired", http.StatusPaymentRequired, ""),
		register.NewConst("StatusPermanentRedirect", http.StatusPermanentRedirect, ""),
		register.NewConst("StatusPreconditionFailed", http.StatusPreconditionFailed, ""),
		register.NewConst("StatusPreconditionRequired", http.StatusPreconditionRequired, ""),
		register.NewConst("StatusProcessing", http.StatusProcessing, ""),
		register.NewConst("StatusProxyAuthRequired", http.StatusProxyAuthRequired, ""),
		register.NewConst("StatusRequestEntityTooLarge", http.StatusRequestEntityTooLarge, ""),
		register.NewConst("StatusRequestHeaderFieldsTooLarge", http.StatusRequestHeaderFieldsTooLarge, ""),
		register.NewConst("StatusRequestTimeout", http.StatusRequestTimeout, ""),
		register.NewConst("StatusRequestURITooLong", http.StatusRequestURITooLong, ""),
		register.NewConst("StatusRequestedRangeNotSatisfiable", http.StatusRequestedRangeNotSatisfiable, ""),
		register.NewConst("StatusResetContent", http.StatusResetContent, ""),
		register.NewConst("StatusSeeOther", http.StatusSeeOther, ""),
		register.NewConst("StatusServiceUnavailable", http.StatusServiceUnavailable, ""),
		register.NewConst("StatusSwitchingProtocols", http.StatusSwitchingProtocols, ""),
		register.NewConst("StatusTeapot", http.StatusTeapot, ""),
		register.NewConst("StatusTemporaryRedirect", http.StatusTemporaryRedirect, ""),
		register.NewFunction("StatusText", http.StatusText, ""),
		register.NewConst("StatusTooEarly", http.StatusTooEarly, ""),
		register.NewConst("StatusTooManyRequests", http.StatusTooManyRequests, ""),
		register.NewConst("StatusUnauthorized", http.StatusUnauthorized, ""),
		register.NewConst("StatusUnavailableForLegalReasons", http.StatusUnavailableForLegalReasons, ""),
		register.NewConst("StatusUnprocessableEntity", http.StatusUnprocessableEntity, ""),
		register.NewConst("StatusUnsupportedMediaType", http.StatusUnsupportedMediaType, ""),
		register.NewConst("StatusUpgradeRequired", http.StatusUpgradeRequired, ""),
		register.NewConst("StatusUseProxy", http.StatusUseProxy, ""),
		register.NewConst("StatusVariantAlsoNegotiates", http.StatusVariantAlsoNegotiates, ""),
		register.NewFunction("StripPrefix", http.StripPrefix, ""),
		register.NewConst("TimeFormat", http.TimeFormat, ""),
		register.NewFunction("TimeoutHandler", http.TimeoutHandler, ""),
		register.NewConst("TrailerPrefix", http.TrailerPrefix, ""),
		register.NewType("Transport", reflect.TypeOf(func(http.Transport) {}).In(0), ""),
	)
}
