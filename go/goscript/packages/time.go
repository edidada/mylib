package imports

import (
	"reflect"
	"time"

	"git.woa.com/vasd_masc_ba/YitihuaOteam/base/gofun/register"
)

var _ = reflect.Int

func init() {
	register.AddPackage("time", "time",
		register.NewConst("ANSIC", time.ANSIC, ""),
		register.NewFunction("After", time.After, ""),
		register.NewFunction("AfterFunc", time.AfterFunc, ""),
		register.NewConst("April", time.April, ""),
		register.NewConst("August", time.August, ""),
		register.NewFunction("Date", time.Date, ""),
		register.NewConst("December", time.December, ""),
		register.NewType("Duration", reflect.TypeOf(func(time.Duration) {}).In(0), ""),
		register.NewConst("February", time.February, ""),
		register.NewFunction("FixedZone", time.FixedZone, ""),
		register.NewConst("Friday", time.Friday, ""),
		register.NewConst("Hour", time.Hour, ""),
		register.NewConst("January", time.January, ""),
		register.NewConst("July", time.July, ""),
		register.NewConst("June", time.June, ""),
		register.NewConst("Kitchen", time.Kitchen, ""),
		register.NewFunction("LoadLocation", time.LoadLocation, ""),
		register.NewFunction("LoadLocationFromTZData", time.LoadLocationFromTZData, ""),
		register.NewVar("Local", &time.Local, reflect.TypeOf(time.Local), ""),
		register.NewType("Location", reflect.TypeOf(func(time.Location) {}).In(0), ""),
		register.NewConst("March", time.March, ""),
		register.NewConst("May", time.May, ""),
		register.NewConst("Microsecond", time.Microsecond, ""),
		register.NewConst("Millisecond", time.Millisecond, ""),
		register.NewConst("Minute", time.Minute, ""),
		register.NewConst("Monday", time.Monday, ""),
		register.NewType("Month", reflect.TypeOf(func(time.Month) {}).In(0), ""),
		register.NewConst("Nanosecond", time.Nanosecond, ""),
		register.NewFunction("NewTicker", time.NewTicker, ""),
		register.NewFunction("NewTimer", time.NewTimer, ""),
		register.NewConst("November", time.November, ""),
		register.NewFunction("Now", time.Now, ""),
		register.NewConst("October", time.October, ""),
		register.NewFunction("Parse", time.Parse, ""),
		register.NewFunction("ParseDuration", time.ParseDuration, ""),
		register.NewType("ParseError", reflect.TypeOf(func(time.ParseError) {}).In(0), ""),
		register.NewFunction("ParseInLocation", time.ParseInLocation, ""),
		register.NewConst("RFC1123", time.RFC1123, ""),
		register.NewConst("RFC1123Z", time.RFC1123Z, ""),
		register.NewConst("RFC3339", time.RFC3339, ""),
		register.NewConst("RFC3339Nano", time.RFC3339Nano, ""),
		register.NewConst("RFC822", time.RFC822, ""),
		register.NewConst("RFC822Z", time.RFC822Z, ""),
		register.NewConst("RFC850", time.RFC850, ""),
		register.NewConst("RubyDate", time.RubyDate, ""),
		register.NewConst("Saturday", time.Saturday, ""),
		register.NewConst("Second", time.Second, ""),
		register.NewConst("September", time.September, ""),
		register.NewFunction("Since", time.Since, ""),
		register.NewFunction("Sleep", time.Sleep, ""),
		register.NewConst("Stamp", time.Stamp, ""),
		register.NewConst("StampMicro", time.StampMicro, ""),
		register.NewConst("StampMilli", time.StampMilli, ""),
		register.NewConst("StampNano", time.StampNano, ""),
		register.NewConst("Sunday", time.Sunday, ""),
		register.NewConst("Thursday", time.Thursday, ""),
		register.NewFunction("Tick", time.Tick, ""),
		register.NewType("Ticker", reflect.TypeOf(func(time.Ticker) {}).In(0), ""),
		register.NewType("Time", reflect.TypeOf(func(time.Time) {}).In(0), ""),
		register.NewType("Timer", reflect.TypeOf(func(time.Timer) {}).In(0), ""),
		register.NewConst("Tuesday", time.Tuesday, ""),
		register.NewVar("UTC", &time.UTC, reflect.TypeOf(time.UTC), ""),
		register.NewFunction("Unix", time.Unix, ""),
		register.NewConst("UnixDate", time.UnixDate, ""),
		register.NewFunction("Until", time.Until, ""),
		register.NewConst("Wednesday", time.Wednesday, ""),
		register.NewType("Weekday", reflect.TypeOf(func(time.Weekday) {}).In(0), ""),
	)
}
